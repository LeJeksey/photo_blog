// Code generated by MockGen. DO NOT EDIT.
// Source: ../components/auth/session.go

// Package mock_auth is a generated GoMock package.
package mocks

import (
	http "net/http"
	auth "photo_blog/components/auth"
	user "photo_blog/models/user"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionManagerInterface is a mock of SessionManagerInterface interface.
type MockSessionManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSessionManagerInterfaceMockRecorder
}

// MockSessionManagerInterfaceMockRecorder is the mock recorder for MockSessionManagerInterface.
type MockSessionManagerInterfaceMockRecorder struct {
	mock *MockSessionManagerInterface
}

// NewMockSessionManagerInterface creates a new mock instance.
func NewMockSessionManagerInterface(ctrl *gomock.Controller) *MockSessionManagerInterface {
	mock := &MockSessionManagerInterface{ctrl: ctrl}
	mock.recorder = &MockSessionManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionManagerInterface) EXPECT() *MockSessionManagerInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSessionManagerInterface) Create(w http.ResponseWriter, user *user.User) (auth.SessionId, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", w, user)
	ret0, _ := ret[0].(auth.SessionId)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSessionManagerInterfaceMockRecorder) Create(w, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionManagerInterface)(nil).Create), w, user)
}

// Destroy mocks base method.
func (m *MockSessionManagerInterface) Destroy(w http.ResponseWriter, req *http.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Destroy", w, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy.
func (mr *MockSessionManagerInterfaceMockRecorder) Destroy(w, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockSessionManagerInterface)(nil).Destroy), w, req)
}
