// Code generated by MockGen. DO NOT EDIT.
// Source: ../services/users/users.go

// Package mock_users is a generated GoMock package.
package mocks

import (
	context "context"
	user "photo_blog/models/user"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsersServiceInterface is a mock of ServiceInterface interface.
type MockUsersServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUsersServiceInterfaceMockRecorder
}

// MockUsersServiceInterfaceMockRecorder is the mock recorder for MockUsersServiceInterface.
type MockUsersServiceInterfaceMockRecorder struct {
	mock *MockUsersServiceInterface
}

// NewMockUsersServiceInterface creates a new mock instance.
func NewMockUsersServiceInterface(ctrl *gomock.Controller) *MockUsersServiceInterface {
	mock := &MockUsersServiceInterface{ctrl: ctrl}
	mock.recorder = &MockUsersServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersServiceInterface) EXPECT() *MockUsersServiceInterfaceMockRecorder {
	return m.recorder
}

// CheckPassword mocks base method.
func (m *MockUsersServiceInterface) CheckPassword(arg0 context.Context, arg1, arg2 string) (*user.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPassword", arg0, arg1, arg2)
	ret0, _ := ret[0].(*user.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckPassword indicates an expected call of CheckPassword.
func (mr *MockUsersServiceInterfaceMockRecorder) CheckPassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPassword", reflect.TypeOf((*MockUsersServiceInterface)(nil).CheckPassword), arg0, arg1, arg2)
}
